# Geschichte

## Lebenserwartung

```{r echo=T, warning=F, message=F}

library(tidyverse)
#library(owidR)

df <- read.csv(file='life-expectancy.csv')

df %>% filter(Entity=="World") %>% 
  ggplot(aes(x=Year, y=Life.expectancy.at.birth..historical.))+
  geom_line()+
  labs(title="Lebenserwartung bei Geburt",
       subtitle="Weltweit",
       x="Jahr",
       y="Lebenserwartung bei Geburt",
       caption="Daten: Our World in Data")+
  theme_light()

```

## Bevölkerung

```{r echo=T, warning=F, message=F}

df <- read.csv(file='population.csv')

options(scipen=999)

df %>% filter(Entity=="World") %>% 
  ggplot(aes(Year, Population..historical.estimates.))+
  geom_line()+
  scale_y_continuous(labels=function(x) format(x, big.mark = ".", scientific = FALSE))+
  labs(title="Weltbevölkerung",
       x="Jahr",
       y="Weltbevölkerung",
       caption="Daten: Our World in Data")+
  theme_light()


```

## Wirtschaftskraft

```{r echo=T, warning=F, message=F}

df <- read.csv(file='maddison-data-gdp-per-capita-in-2011us-single-benchmark.csv')

df %>% filter(Entity=="World") %>% 
  ggplot(aes(Year, GDP.per.capita))+
  geom_line()+
  labs(title="Bruttoinlandsprodukt pro Kof",
       subtitle="Weltweit",
       x="Jahr",
       y="Bruttoinlandsprodukt pro Kopf",
       caption="Daten: Our World in Data")+
  theme_light()

df %>% filter(Entity=="France") %>% 
  ggplot(aes(Year, GDP.per.capita))+
  geom_line()+
  labs(title="Bruttoinlandsprodukt pro Kof",
       subtitle="Frankreich",
       x="Jahr",
       y="Bruttoinlandsprodukt pro Kopf",
       caption="Daten: Our World in Data")+
  theme_light()


```


## Phasen des Wachstums

```{python}
#| message: false
#| warning: false

from graphviz import Digraph
from IPython.display import display

dot = Digraph()

# Set common attributes for all nodes
dot.attr('node', width='3', shape='box')
dot.attr(label='Titel', labelloc='t', labeljust='c', fontsize='20', fontname='Times-Bold')

# Increase the vertical distance between title and text
dot.node('invis1', '', shape='none', width='0')

# Sub-nodes with text wrapping
sub_nodes_b = [
    'Vor 70.000 Jahren',
    'Vor 10.000 Jahren',
    '16. Jh',
    '19. Jh',
    'Gegenwart'
]

sub_nodes_a = [
    'Kognitive Revolution:\l Besiedelung der Welt\l',
    'Neolithische Revolution:\l Sesshaftigkeit und\l Ackerbau\l',
    'Wissenschaftliche Revolution:\l Systematische Forschung\l',
    'Industrielle Revolution:\l Industrielle Produktion\l',
    'Digitale Revolution:\l EDV, IKT, KI\l'
]

sub_notes = ['Räumliche Ausdehnung', 'Bevölkerungswachstum', 'Wissenszuwachs', 'Produktionswachstum', '?']  # New sub-notes to the right

# Create sub-nodes and set fontface for A3 and A4
for i in range(len(sub_nodes_a)):

    a_node = f'A{i}'
    dot.node(a_node, sub_nodes_a[i])

    b_node = f'B{i}'
    dot.node(b_node, f'{sub_nodes_b[i]}\r', shape='none', width='2.5')

    c_node = f'C{i}'  # New sub-note node
    dot.node(c_node, sub_notes[i], shape='none')  # No border for these nodes

    # Positioning sub-nodes A[i] and B[i] in the same rank
    with dot.subgraph() as s:
        s.attr(rank='same')
        s.node(a_node)
        s.node(b_node)
        s.node(c_node)  # Add C[i] to the same rank

    # Invisible edges to enforce vertical alignment of sub-nodes under A and B
    if i > 0:
        dot.edge(f'A{i-1}', a_node, style='invis', weight='10')
        dot.edge(f'B{i-1}', b_node, weight='10')
        dot.edge(f'C{i-1}', c_node, style='invis', weight='10')  # Align C nodes

dot.edge('invis1', 'B0', style='invis', weight='10')  # Positions also b_nodes to the left

dot.node('invis', '', shape='none', width='0')
dot.node('caption', label='Darstellung: Jan S. Voßwinkel in Anlehnung an Groviec (2022)', shape='none', width='7', fontsize='10')

with dot.subgraph() as s:
    s.attr(rank='same')
    s.node('caption')
    s.node('invis')

dot.edge(f'A{len(sub_nodes_a) - 1}', 'caption', style='invis')
dot.edge(f'A{len(sub_nodes_a) - 1}', 'invis', style='invis')

# Render the graph (this will display the source code)
#print(dot.source)

# To render the graph to a file, use dot.render(filename='output.gv') or dot.view()
#dot.render(view=True)

# Diagramm im Notebook anzeigen
display(dot)
```

## Geschichtliche Bedeutung des Wirtschaftswachstums

Bitte lesen Sie folgenden Text: [What is economic growth? And why is it so important?](https://ourworldindata.org/what-is-economic-growth)

```{r qr,  echo=FALSE, warning=FALSE}
library(qrcode)

qr <- qr_code('https://ourworldindata.org/what-is-economic-growth')
#plot(qr)

generate_svg(qr, filename = "qr.svg")

```


 ![QR-Code zum Text](qr.svg){width="40%"} 