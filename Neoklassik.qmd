# Neoklassische Wachstumstheorie

## Produktionsfunktion

Allgemeine Form Cobb-Douglas Produktionsfunktion

$Y=A{K}^{\alpha }{L}^{\beta }$

Annahme: Konstante Skalenerträge

$Y=A{K}^{\alpha }{L}^{\left(1-\alpha \right)}$

Für das Folgende nehmen wir zunächst an $A=1$

## Kapitalbildung

Geschlossene Volkswirtschaft

$I=S$


${I}_t=S_t=s{Y}_t$


Veränderung des Kapitalstocks

${K}_{t+1}=\left(1-\delta \right){K}_t+{I}_t$


## Pro-Kopf-Größen

Pro-Kopf-Einkommen 

$y=\frac{Y}{L}=\frac{A{K}^{\alpha }{L}^{1-\alpha }}{L}=\frac{A{K}^{\alpha }L}{L^{\alpha }L}=A{\left(\frac{K}{L}\right)}^{\alpha }$



Kapitalstock pro Kopf

$\frac{K_{t+1}}{L}=\left(1-\delta \right)\left(\frac{{K}_{t}}{\mathrm{L}}\right)+\mathrm{s}\left(\frac{{Y}_{t}}{\mathrm{L}}\right)$

oder kürzer

${k}_{t+1}=\left(1-\delta \right){k}_t+s{y}_t$


Pro-Kopf-Konsum

$c=\left(\frac{C}{L}\right)=\left(1-s\right)\left(\frac{Y}{L}\right)$


## Langfristiges Gleichgewicht

Investitionen = Abschreibungen 

$s{\left(\frac{\mathrm{K}}{\mathrm{L}}\right)}^{\alpha }=\delta \left(\frac{K}{L}\right)$

$\iff s=\delta {\left(\frac{\mathrm{K}}{\mathrm{L}}\right)}^{1-\alpha }$

$\iff \frac{s}{\delta }={\left(\frac{\mathrm{K}}{\mathrm{L}}\right)}^{1-\alpha }$

$\iff k=\left(\frac{K}{L}\right)={\left(\frac{s}{\delta}\right)}^{\frac{1}{1-\alpha }}$

$\iff y=\left(\frac{\mathrm{Y}}{\mathrm{L}}\right)={\left(\frac{s}{\delta}\right)}^{\frac{\alpha }{1-\alpha }}$



$\rightarrow$ Es gibt einen langfristigen Kapitalstock, der nicht mehr aus sich heraus wächst.

$\rightarrow$ Damit gibt es auch ein Langfristiges Einkommen und ein Langfristiges Konsumniveau

$\rightarrow$ Dies gilt *unabhängig* von einem Ausgangswert für den Kapitalstock


## Entwicklung des Kapitalstocks 

```{python}
#|message: false
#|warning: false


import plotnine as gg
import numpy as np
import pandas as pd

# Parameter
alpha = 0.4
delta = 0.1
s = 0.2
L = 1 # einfachster Fall
n = 0 # Bevölkerungswachstum

# Zeitschritte
t = np.linspace(0, 100, 101)

# Kapitalakkumulation
##Vorbeteitung

K_t = np.zeros(len(t))
Y_t = np.zeros(len(t))
I_t = np.zeros(len(t))
L_t = np.zeros(len(t))
k_t = np.zeros(len(t))
y_t = np.zeros(len(t))

## Ausgangswerte

K_t[0] = 2
Y_t[0] = (K_t[0]**alpha)*(L**(1-alpha)) #CD-Funktion
I_t[0] = s*Y_t[0]
L_t[0] = L
y_t[0] = Y_t[0]/L_t[0]
k_t[0] = K_t[0]/L_t[0]

## Dynamik


for i in range(1, len(t)):

    K_t[i] = (1-delta)*K_t[i-1] + I_t[i-1]
    Y_t[i] = (K_t[i]**alpha) * (L**(1-alpha))
    I_t[i] = s*Y_t[i]
    L_t[i] = (1+n)*L_t[i-1]
    k_t[i] = K_t[i]/L_t[i]
    y_t[i] = Y_t[i]/L_t[i]



## In Datenframe speichern
df = pd.DataFrame({'t': t, 'Kapital': K_t, 'Y': Y_t,
                    'Investitionen': I_t, 'Abschreibungen': delta*K_t,
                    'Bevölkerung': L_t, 'Kapital pro Kopf': k_t,
                  'y': y_t})

#Grafiken



print(gg.ggplot(df, gg.aes('t', 'Kapital pro Kopf')) + gg.geom_line() +
 gg.labs(x='Zeit', y='Kapital pro Kopf')+
 gg.theme_light()
)


print(gg.ggplot(df, gg.aes('t', 'Investitionen')) + gg.geom_line() +
gg.geom_line(gg.aes(y='Abschreibungen'), color= 'blue')+
 #gg.labs(x='Zeit', y='Investitionen,  Abschreibungen')+
 gg.theme_light()
)


print(gg.ggplot(df, gg.aes('Kapital pro Kopf', 'Abschreibungen')) + gg.geom_line() +
gg.geom_line(gg.aes(y='Investitionen'), color= 'blue')+
gg.labs(x='k', y='I,  Abschreibungen')+
 gg.theme_light()
)


print(gg.ggplot(df, gg.aes('t', 'y')) + gg.geom_line() +
 gg.labs(x='Zeit', y='Pro Kopf Einkommen')+
 gg.theme_light()
)


# Daten zeigen
# print(df)

```


## Entwicklung des Einkommens

## Sparquote für maximales Einkommen

## Sparquote für maximalen Komsum

$s^* = \alpha \rightarrow$ Spare das Kapitaleinkommen und konsumiere das Arbeitseinkommen